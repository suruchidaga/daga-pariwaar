{"version":3,"file":"static/js/680.f59a9693.chunk.js","mappings":"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","sources":["components/utility/supabase.js","components/utility/UploadImg.js","containers/FamilyDetails/index.js"],"sourcesContent":["const { createClient } = require(\"@supabase/supabase-js\");\r\n\r\n//const url = \"<SUPABASE_URL>\";\r\n//const key = \"<SUPABASE_KEY>\";\r\n\r\nconst url = \"https://bnyaacwroakthbkyxsss.supabase.co\";\r\nconst key =\r\n  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJueWFhY3dyb2FrdGhia3l4c3NzIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NjgxOTE5MTAsImV4cCI6MTk4Mzc2NzkxMH0.9b_0eVf-liwfOBoTypuYgHQLEk8SnMGAgnm0lgU3diQ\";\r\n\r\nconst supabase = createClient(url, key);\r\n\r\nexport default supabase;\r\n","import supabase from \"./supabase\";\r\n\r\nexport default function UploadImg({ onSuccess, onError }) {\r\n  const fileUpload = async (e) => {\r\n    let file;\r\n\r\n    if (e.target.files) {\r\n      file = e.target.files[0];\r\n    }\r\n\r\n    const ext = file?.name.split(\".\").pop();\r\n    const fileName = `${new Date().getTime()}.${ext}`;\r\n\r\n    const { data, error } = await supabase.storage\r\n      .from(\"family\")\r\n      .upload(\"avatar/\" + fileName, file);\r\n\r\n    if (data) {\r\n      onSuccess(data.path);\r\n    }\r\n    if (error) {\r\n      onError(error);\r\n    }\r\n  };\r\n\r\n  return <input type=\"file\" name=\"file\" id=\"file\" onChange={fileUpload} />;\r\n}\r\n","import ContentHeader from \"../ContentHeader\";\r\nimport { loadState } from \"@lib/helpers/localStorage\";\r\nimport SearchFamily from \"./SearchFamily\";\r\nimport ReadFamilyDetails from \"./ReadFamilyDetails\";\r\nimport UpcomingEvents from \"./UpcomingEvents\";\r\nimport FamilyDetailsWrapper from \"./styles\";\r\n//import { cloneDeep } from \"lodash\";// Add cloneDeep to the lodash library\r\nimport React, { useRef, useState } from \"react\";\r\nimport { Tree } from \"./FamilyTree\";\r\n//import Tree from \"../../components/uielements/tree\";\r\nimport UploadImg from \"../../components/utility/UploadImg\";\r\nimport {\r\n  DownOutlined,\r\n} from \"@ant-design/icons\";\r\nimport familyDetails from \"./familyDetails.json\";\r\n\r\nconst IMGPATH = \"https://bnyaacwroakthbkyxsss.supabase.co/storage/v1/object/public/family/\";\r\n\r\nfunction unflatten(items) {\r\n  var tree = [],\r\n      mappedArr = {}\r\n\r\n  // Build a hash table and map items to objects\r\n  items.forEach(function(item) {\r\n    var key = item.No;\r\n    if (!mappedArr.hasOwnProperty(key)) { // in case of duplicates\r\n      mappedArr[key] = item; // the extracted id as key, and the item as value\r\n      mappedArr[key].children = [];  // under each item, add a key \"children\" with an empty array as value\r\n    }\r\n  })\r\n\r\n  // If root-level nodes are not included in hash table, include them\r\n  items.forEach(function(item) {\r\n    var parentId = item.Parent;\r\n    if (!mappedArr.hasOwnProperty(parentId)) {\r\n      // make up an item for root-level node\r\n      const newItem = item;\r\n      newItem.key = 0;\r\n      newItem.Name = item.NAME;\r\n      newItem.Parent = item.Parent;\r\n      mappedArr[parentId] = newItem; // the parent id as key, and made-up an item as value\r\n      mappedArr[parentId].children = [];\r\n    }\r\n  })\r\n\r\n  // Loop over hash table\r\n  for (var key in mappedArr) {\r\n    if (mappedArr.hasOwnProperty(key)) {\r\n      const mappedElem = mappedArr[key];\r\n      mappedElem.key = mappedElem.No;\r\n\r\n      // If the element is not at the root level, add it to its parent array of children. Note this will continue till we have only root level elements left\r\n      if (mappedElem.Parent) {\r\n        var parentId = mappedElem.Parent;\r\n        var childItem = mappedElem;\r\n        var parentItem = mappedArr[parentId];\r\n        parentItem = fillRemainingDetailsInParent(parentItem, childItem);\r\n        childItem = fillRemainingDetails(parentItem, childItem);\r\n        console.log(\"after fillRemainingDetails: \") ;\r\n                console.log(childItem) ;\r\n\r\n\r\n        parentItem.children.push(childItem);\r\n      }\r\n\r\n      // If the element is at the root level, directly push to the tree\r\n      else {\r\n        tree.push(mappedElem);\r\n      }\r\n    }\r\n  }\r\n\r\n  return tree[0];\r\n\r\n}\r\nfunction fillRemainingDetailsInParent(parentItem, childItem) {\r\n    parentItem['NAME'] = titleCase(parentItem.NAME);\r\n    /*if (parentItem.RESADD !='') {\r\n        parentItem['RESADD'] = replaceNewLineWithBreakTag(parentItem.RESADD);\r\n    }\r\n    if (parentItem.RESADD =='' && childItem.RESADD !='' && (childItem.Parent == parentItem.No) &&\r\n     (childItem.Relation == 'H' || childItem.Relation == 'W' || childItem.Relation == 'S') ) {\r\n        parentItem['RESADD'] = replaceNewLineWithBreakTag(childItem.RESADD);\r\n    }\r\n    if (parentItem.RESPHNO =='' && childItem.RESPHNO !='' && (childItem.Parent == parentItem.No) &&\r\n        (childItem.Relation == 'H' || childItem.Relation == 'W' || childItem.Relation == 'S') ) {\r\n        parentItem['RESPHNO'] = childItem.RESPHNO;\r\n    }*/\r\n    if (childItem.Relation == 'H' || childItem.Relation == 'W' && (childItem.Parent == parentItem.No) &&\r\n        (childItem.Relation == 'H' || childItem.Relation == 'W' || childItem.Relation == 'S') ) {\r\n        parentItem['SPOUSE'] = childItem.NAME;\r\n    }\r\n    return parentItem;\r\n}\r\nfunction fillRemainingDetails(parentItem, childItem) {\r\nconsole.log(\"inside fillRemainingDetails: \"+ childItem.NAME) ;\r\n    console.log(parentItem) ;\r\n    childItem['NAME'] = titleCase(childItem.NAME);\r\n    if (parentItem.EMAILID != '') {\r\n            parentItem['EMAILID'] = parentItem.EMAILID.toLowerCase();\r\n        }\r\n    if (childItem.EMAILID != '') {\r\n            childItem['EMAILID'] = childItem.EMAILID.toLowerCase();\r\n        }\r\n    if (childItem.Relation == 'H' || childItem.Relation == 'W' ) {\r\n        childItem['DOA'] = parentItem.DOA;\r\n        childItem['SPOUSE'] = parentItem.NAME;\r\n    }\r\n    if (childItem.Relation == 'S' || childItem.Relation == 'D') {\r\n    console.log(parentItem.children.length)\r\n        childItem['FATHER'] = (parentItem.children != null &&\r\n        (parentItem.Relation == '' || parentItem.Relation == 'S')) ? parentItem.NAME :\r\n            (parentItem.children.length > 0 && parentItem.children[0].Relation == 'H' ? parentItem.children[0].NAME : '');\r\n        childItem['MOTHER'] = (parentItem.children != null &&\r\n        (parentItem.Relation == '' || parentItem.Relation == 'D')) ? parentItem.NAME :\r\n            (parentItem.children.length > 0 && parentItem.children[0].Relation == 'W' ? parentItem.children[0].NAME : '');\r\n    }\r\n    if ((childItem.Relation == 'W' || childItem.Relation == 'H') && (childItem.Parent == parentItem.No)) {\r\n        if (parentItem.FATHERINLAW != '') {\r\n            parentItem['FATHERINLAW'] = titleCase(parentItem.FATHERINLAW);\r\n        }\r\n        if (parentItem.MOTHERINLAW != '') {\r\n            parentItem['MOTHERINLAW'] = titleCase(parentItem.MOTHERINLAW);\r\n        }\r\n        childItem['FATHER'] = parentItem.FATHERINLAW;\r\n        childItem['MOTHER'] = parentItem.MOTHERINLAW;\r\n        childItem['FATHERINLAW'] = parentItem.FATHER;\r\n        childItem['MOTHERINLAW'] = parentItem.MOTHER;\r\n    }\r\n    /*if (childItem.RESADD =='' && (childItem.Parent == parentItem.No)) {\r\n        childItem['RESADD'] = replaceNewLineWithBreakTag(parentItem.RESADD);\r\n    }*/\r\n    if (childItem.RESPHNO =='' && (childItem.Parent == parentItem.No)) {\r\n        childItem['RESPHNO'] = parentItem.RESPHNO;\r\n    }\r\n    console.log(childItem) ;\r\n    return childItem;\r\n}\r\nfunction titleCase(str) {\r\nconsole.log(str.split(' '));\r\n    if (typeof str !== 'undefined') {\r\n    return str\r\n        .split(' ')\r\n        .map((word) => word[0].toUpperCase() + word.slice(1).toLowerCase())\r\n        .join(' ');\r\n    } else {\r\n        return \"\";\r\n    }\r\n\r\n}\r\nfunction replaceNewLineWithBreakTag(text) {\r\n  // Replace the \\n with <br>\r\n    console.log(text);\r\n\r\n  var otext = text.replace(/(\\r\\n|\\r|\\n)/g, '<br/>');\r\n  // Update the value of paragraph\r\n  console.log(otext);\r\n  return otext;\r\n}\r\n\r\nexport default function FamilyDetails() {\r\n  const selectedMember = loadState(\"selectedMember\");\r\n  const selectedMemberName = `${selectedMember?.name?.first} ${selectedMember?.name?.last}`;\r\n   const tree = [];\r\n   tree.push(unflatten(familyDetails));\r\n  const [treeData, setTreeData] = useState(() => tree);\r\n  const [rawFamilyData, setRawFamilyData] = useState(() => familyDetails);\r\n\r\n  const [avatar, setAvatar] = useState(\"\");\r\n\r\n  const onSuccess = (path) => {\r\n    setAvatar(IMGPATH + path);\r\n  };\r\n\r\n  const onError = (error) => {\r\n    console.log(error);\r\n  };\r\n\r\n\r\n\r\n\r\n  //setTreeData(unflatten(familyDetails));\r\n  //setTreeData(unflatten(familyDetails));\r\n /*const [rawFamilyData, setRawFamilyData] = useState({});\r\n  setRawFamilyData(familyDetails);\r\n  console.log(treeData);*/\r\n  console.log(treeData);\r\n  //<UpcomingEvents familyData = {rawFamilyData}/>\r\n\r\n  return (\r\n    <FamilyDetailsWrapper>\r\n      <ContentHeader headerTitle=\"Family Details\" />\r\n       {<UploadImg {...{ onSuccess, onError }} />}\r\n\r\n      {avatar && (\r\n        <>\r\n          <img width={200} src={avatar} alt=\"\" />\r\n          <input type=\"hidden\" name=\"avatar\" value={avatar} />\r\n        </>\r\n      )}\r\n      <ReadFamilyDetails treeData = {treeData}/>\r\n    </FamilyDetailsWrapper>\r\n  );\r\n}\r\n"],"names":["supabase","createClient","require","UploadImg","onSuccess","onError","fileUpload","e","target","files","file","ext","name","split","pop","fileName","Date","getTime","upload","data","error","path","type","id","onChange","fillRemainingDetailsInParent","parentItem","childItem","titleCase","NAME","Relation","Parent","No","fillRemainingDetails","console","log","EMAILID","toLowerCase","DOA","children","length","FATHERINLAW","MOTHERINLAW","FATHER","MOTHER","RESPHNO","str","map","word","toUpperCase","slice","join","FamilyDetails","selectedMember","loadState","tree","first","last","push","items","mappedArr","key","forEach","item","hasOwnProperty","parentId","newItem","Name","mappedElem","unflatten","familyDetails","useState","treeData","avatar","setAvatar","ContentHeader","headerTitle","width","src","alt","value","ReadFamilyDetails"],"sourceRoot":""}